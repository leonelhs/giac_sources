/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package javagiac;

public class giacJNI {
  public final static native long new_vectori__SWIG_0();
  public final static native long new_vectori__SWIG_1(long jarg1);
  public final static native long vectori_size(long jarg1, vectori jarg1_);
  public final static native long vectori_capacity(long jarg1, vectori jarg1_);
  public final static native void vectori_reserve(long jarg1, vectori jarg1_, long jarg2);
  public final static native boolean vectori_isEmpty(long jarg1, vectori jarg1_);
  public final static native void vectori_clear(long jarg1, vectori jarg1_);
  public final static native void vectori_add(long jarg1, vectori jarg1_, int jarg2);
  public final static native int vectori_get(long jarg1, vectori jarg1_, int jarg2);
  public final static native void vectori_set(long jarg1, vectori jarg1_, int jarg2, int jarg3);
  public final static native void delete_vectori(long jarg1);
  public final static native long new_vectord__SWIG_0();
  public final static native long new_vectord__SWIG_1(long jarg1);
  public final static native long vectord_size(long jarg1, vectord jarg1_);
  public final static native long vectord_capacity(long jarg1, vectord jarg1_);
  public final static native void vectord_reserve(long jarg1, vectord jarg1_, long jarg2);
  public final static native boolean vectord_isEmpty(long jarg1, vectord jarg1_);
  public final static native void vectord_clear(long jarg1, vectord jarg1_);
  public final static native void vectord_add(long jarg1, vectord jarg1_, double jarg2);
  public final static native double vectord_get(long jarg1, vectord jarg1_, int jarg2);
  public final static native void vectord_set(long jarg1, vectord jarg1_, int jarg2, double jarg3);
  public final static native void delete_vectord(long jarg1);
  public final static native long new_vectorg__SWIG_0();
  public final static native long new_vectorg__SWIG_1(long jarg1);
  public final static native long vectorg_size(long jarg1, vectorg jarg1_);
  public final static native long vectorg_capacity(long jarg1, vectorg jarg1_);
  public final static native void vectorg_reserve(long jarg1, vectorg jarg1_, long jarg2);
  public final static native boolean vectorg_isEmpty(long jarg1, vectorg jarg1_);
  public final static native void vectorg_clear(long jarg1, vectorg jarg1_);
  public final static native void vectorg_add(long jarg1, vectorg jarg1_, long jarg2, gen jarg2_);
  public final static native long vectorg_get(long jarg1, vectorg jarg1_, int jarg2);
  public final static native void vectorg_set(long jarg1, vectorg jarg1_, int jarg2, long jarg3, gen jarg3_);
  public final static native void delete_vectorg(long jarg1);
  public final static native long new_vectors__SWIG_0();
  public final static native long new_vectors__SWIG_1(long jarg1);
  public final static native long vectors_size(long jarg1, vectors jarg1_);
  public final static native long vectors_capacity(long jarg1, vectors jarg1_);
  public final static native void vectors_reserve(long jarg1, vectors jarg1_, long jarg2);
  public final static native boolean vectors_isEmpty(long jarg1, vectors jarg1_);
  public final static native void vectors_clear(long jarg1, vectors jarg1_);
  public final static native void vectors_add(long jarg1, vectors jarg1_, String jarg2);
  public final static native String vectors_get(long jarg1, vectors jarg1_, int jarg2);
  public final static native void vectors_set(long jarg1, vectors jarg1_, int jarg2, String jarg3);
  public final static native void delete_vectors(long jarg1);
  public final static native void context_tabptr_set(long jarg1, context jarg1_, long jarg2);
  public final static native long context_tabptr_get(long jarg1, context jarg1_);
  public final static native void context_globalcontextptr_set(long jarg1, context jarg1_, long jarg2, context jarg2_);
  public final static native long context_globalcontextptr_get(long jarg1, context jarg1_);
  public final static native void context_previous_set(long jarg1, context jarg1_, long jarg2, context jarg2_);
  public final static native long context_previous_get(long jarg1, context jarg1_);
  public final static native void context_globalptr_set(long jarg1, context jarg1_, long jarg2);
  public final static native long context_globalptr_get(long jarg1, context jarg1_);
  public final static native void context_parent_set(long jarg1, context jarg1_, long jarg2, context jarg2_);
  public final static native long context_parent_get(long jarg1, context jarg1_);
  public final static native void context_quoted_global_vars_set(long jarg1, context jarg1_, long jarg2);
  public final static native long context_quoted_global_vars_get(long jarg1, context jarg1_);
  public final static native void context_history_in_ptr_set(long jarg1, context jarg1_, long jarg2);
  public final static native long context_history_in_ptr_get(long jarg1, context jarg1_);
  public final static native void context_history_out_ptr_set(long jarg1, context jarg1_, long jarg2);
  public final static native long context_history_out_ptr_get(long jarg1, context jarg1_);
  public final static native long new_context__SWIG_0();
  public final static native long new_context__SWIG_1(long jarg1, context jarg1_);
  public final static native long new_context__SWIG_2(String jarg1);
  public final static native void delete_context(long jarg1);
  public final static native long context_clone(long jarg1, context jarg1_);
  public final static native void gen_type_set(long jarg1, gen jarg1_, short jarg2);
  public final static native short gen_type_get(long jarg1, gen jarg1_);
  public final static native void gen_type_unused_set(long jarg1, gen jarg1_, short jarg2);
  public final static native short gen_type_unused_get(long jarg1, gen jarg1_);
  public final static native void gen_subtype_set(long jarg1, gen jarg1_, byte jarg2);
  public final static native byte gen_subtype_get(long jarg1, gen jarg1_);
  public final static native void gen_reserved_set(long jarg1, gen jarg1_, int jarg2);
  public final static native int gen_reserved_get(long jarg1, gen jarg1_);
  public final static native void gen_val_set(long jarg1, gen jarg1_, int jarg2);
  public final static native int gen_val_get(long jarg1, gen jarg1_);
  public final static native long gen_ref_count(long jarg1, gen jarg1_);
  public final static native long new_gen__SWIG_0();
  public final static native long new_gen__SWIG_1(long jarg1, short jarg2);
  public final static native long new_gen__SWIG_2(int jarg1);
  public final static native long new_gen__SWIG_3(long jarg1);
  public final static native long new_gen__SWIG_4(long jarg1);
  public final static native long new_gen__SWIG_5(double jarg1);
  public final static native long new_gen__SWIG_6(long jarg1);
  public final static native double gen_DOUBLE_val(long jarg1, gen jarg1_);
  public final static native long gen_FLOAT_val(long jarg1, gen jarg1_);
  public final static native long new_gen__SWIG_7(int jarg1, int jarg2);
  public final static native long new_gen__SWIG_8(double jarg1, double jarg2);
  public final static native long new_gen__SWIG_9(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long new_gen__SWIG_10(long jarg1);
  public final static native long new_gen__SWIG_11(long jarg1, gen jarg1_);
  public final static native long new_gen__SWIG_12(long jarg1);
  public final static native long new_gen__SWIG_13(long jarg1);
  public final static native long new_gen__SWIG_14(long jarg1, short jarg2);
  public final static native long new_gen__SWIG_15(long jarg1);
  public final static native long new_gen__SWIG_16(long jarg1, short jarg2);
  public final static native long new_gen__SWIG_17(long jarg1);
  public final static native long new_gen__SWIG_18(long jarg1);
  public final static native long new_gen__SWIG_19(long jarg1);
  public final static native long new_gen__SWIG_20(long jarg1);
  public final static native long new_gen__SWIG_21(long jarg1);
  public final static native long new_gen__SWIG_22(long jarg1);
  public final static native long new_gen__SWIG_23(long jarg1);
  public final static native long new_gen__SWIG_24(long jarg1);
  public final static native long new_gen__SWIG_25(String jarg1, long jarg2, context jarg2_);
  public final static native long new_gen__SWIG_26(long jarg1, int jarg2);
  public final static native long new_gen__SWIG_27(long jarg1);
  public final static native long new_gen__SWIG_28(long jarg1);
  public final static native long new_gen__SWIG_29(long jarg1);
  public final static native long new_gen__SWIG_30(long jarg1);
  public final static native long new_gen__SWIG_31(long jarg1);
  public final static native void delete_gen(long jarg1);
  public final static native long gen_ref_ZINTptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_REALptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_CPLXptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_IDNTptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_SYMBptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_MODptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_FRACptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_EXTptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_POLYptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_VECTptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_SPOL1ptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_STRNGptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_FUNCptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_USERptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_MAPptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_EQWptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_GROBptr(long jarg1, gen jarg1_);
  public final static native long gen_ref_POINTER_val(long jarg1, gen jarg1_);
  public final static native boolean gen_in_eval(long jarg1, gen jarg1_, int jarg2, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long gen_eval(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native boolean gen_in_evalf(long jarg1, gen jarg1_, int jarg2, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long gen_evalf(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long gen_evalf_double(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long gen_evalf2double(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native int gen_to_int(long jarg1, gen jarg1_);
  public final static native boolean gen_is_real(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean gen_is_cinteger(long jarg1, gen jarg1_);
  public final static native boolean gen_is_integer(long jarg1, gen jarg1_);
  public final static native boolean gen_is_constant(long jarg1, gen jarg1_);
  public final static native String gen_print__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String gen_printcharptr(long jarg1, gen jarg1_);
  public final static native int gen_sprint(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native String gen_print_universal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String gen_print__SWIG_1(long jarg1, gen jarg1_);
  public final static native long gen_wprint(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native void gen_modify(long jarg1, gen jarg1_, int jarg2);
  public final static native void gen_dbgprint(long jarg1, gen jarg1_);
  public final static native void gen_uncoerce(long jarg1, gen jarg1_);
  public final static native long gen_conj(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gen_re(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gen_im(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gen_inverse(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gen_squarenorm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int gen_bindigits(long jarg1, gen jarg1_);
  public final static native long gen_operator_at__SWIG_0(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long gen_operator_at__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long gen_operator_of(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean gen_islesscomplexthan(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native boolean gen_is_approx(long jarg1, gen jarg1_);
  public final static native int gen_symb_size(long jarg1, gen jarg1_);
  public final static native long gen_change_subtype(long jarg1, gen jarg1_, int jarg2);
  public final static native boolean gen_is_symb_of_sommet(long jarg1, gen jarg1_, long jarg2);
  public final static native long gen_makegen(long jarg1, gen jarg1_, int jarg2);
  public final static native long makevecteur__SWIG_0(long jarg1, gen jarg1_);
  public final static native long makevecteur__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long makevecteur__SWIG_2(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_);
  public final static native long makevecteur__SWIG_3(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_);
  public final static native long makevecteur__SWIG_4(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_);
  public final static native long makevecteur__SWIG_5(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, gen jarg6_);
  public final static native long makevecteur__SWIG_6(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, gen jarg6_, long jarg7, gen jarg7_);
  public final static native long makevecteur__SWIG_7(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, gen jarg6_, long jarg7, gen jarg7_, long jarg8, gen jarg8_);
  public final static native long makevecteur__SWIG_8(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, gen jarg6_, long jarg7, gen jarg7_, long jarg8, gen jarg8_, long jarg9, gen jarg9_);
  public final static native long _factor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _simplify(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _size(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long add(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long sub(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long neg(long jarg1, gen jarg1_);
  public final static native long mul(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long rdiv(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long mod(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long pow__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long giac_pow(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long iquo(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long irem(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_);
  public final static native long smod__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native void smod__SWIG_1(long jarg1, long jarg2, gen jarg2_, long jarg3);
  public final static native long smod__SWIG_2(long jarg1, long jarg2, gen jarg2_);
  public final static native long inv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean operator_equal(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long equal(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native int fastsign(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sign(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean is_greater(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean is_strictly_greater(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean is_positive(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean is_strictly_positive(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean ck_is_greater(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean ck_is_strictly_greater(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean ck_is_positive(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean ck_is_strictly_positive(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long superieur_strict(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long superieur_egal(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long inferieur_strict(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long inferieur_egal(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean symb_size_less(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long min(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long max(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long factorial(long jarg1);
  public final static native long comb__SWIG_0(long jarg1, long jarg2);
  public final static native long perm(long jarg1, long jarg2);
  public final static native long pow__SWIG_1(long jarg1, gen jarg1_, long jarg2);
  public final static native long pow__SWIG_2(long jarg1, gen jarg1_, int jarg2);
  public final static native long pow__SWIG_3(long jarg1, long jarg2);
  public final static native long gcd(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long lcm(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long simplify__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native void egcd(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_);
  public final static native long ichinrem(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_);
  public final static native long invmod(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long fracmod__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native boolean fracmod__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_);
  public final static native long powmod(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_);
  public final static native long isqrt(long jarg1, gen jarg1_);
  public final static native long re(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long no_context_re(long jarg1, gen jarg1_);
  public final static native long im(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long no_context_im(long jarg1, gen jarg1_);
  public final static native void reim(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long conj(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long no_context_conj(long jarg1, gen jarg1_);
  public final static native long sq(long jarg1, gen jarg1_);
  public final static native long abs__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long abs__SWIG_1(long jarg1, gen jarg1_);
  public final static native long linfnorm__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long linfnorm__SWIG_1(long jarg1, gen jarg1_);
  public final static native long arg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long arg_CPLX(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int is_perfect_square(long jarg1, gen jarg1_);
  public final static native int is_probab_prime_p(long jarg1, gen jarg1_);
  public final static native long nextprime(long jarg1, gen jarg1_);
  public final static native long prevprime(long jarg1, gen jarg1_);
  public final static native int jacobi(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native int legendre(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long pascal_next_line(long jarg1);
  public final static native long pascal_nth_line(int jarg1);
  public final static native long vector2vecteur(long jarg1);
  public final static native long chkmod(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long makemod(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long makemodquoted(long jarg1, gen jarg1_, long jarg2, gen jarg2_);
  public final static native long symbolique2liste(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long liste2symbolique(long jarg1);
  public final static native boolean is_atomic(long jarg1, gen jarg1_);
  public final static native long string2gen__SWIG_0(String jarg1, boolean jarg2);
  public final static native long string2gen__SWIG_1(String jarg1);
  public final static native long no_context_evalf(long jarg1, gen jarg1_);
  public final static native long evalf(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long evalf2bcd_nock(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long evalf2bcd(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native boolean has_evalf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, int jarg3, long jarg4, context jarg4_);
  public final static native double int2double(int jarg1);
  public final static native long aplatir_fois_plus(long jarg1, gen jarg1_);
  public final static native long collect(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long select_root(long jarg1, long jarg2, context jarg2_);
  public final static native boolean is_known_rootof(long jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long alg_evalf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long approx_rootof(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long common_EXT(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, long jarg4, context jarg4_);
  public final static native long common_minimal_POLY(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, long jarg6, context jarg6_);
  public final static native long ext_add(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long ext_sub(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long ext_mul(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long symb_rootof(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long rootof(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sturm(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native int sturmab(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _sturmab(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sturm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sturmseq(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int sturmsign(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native int find_range(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long fminmax(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _complexroot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _realroot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _crationalroot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rationalroot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long symb2poly_num(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long eval_before_diff(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long derive__SWIG_0(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long derive__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long derive__SWIG_2(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _derive(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _function_diff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _grad(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long laplace(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _laplace(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long diffeq_constante(int jarg1, long jarg2, context jarg2_);
  public final static native long ilaplace(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _ilaplace(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _desolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long ztrans(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _ztrans(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long invztrans(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _invztrans(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long integrate_without_lnabs(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _ezgcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _modgcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _heugcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _psrgcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long quad(long jarg1, long jarg2, gen jarg2_, long jarg3, long jarg4, context jarg4_);
  public final static native long qxa(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long _q2a(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gauss(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long _gauss(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long axq(long jarg1, long jarg2, long jarg3, context jarg3_);
  public final static native long _a2q(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long qxac(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long _conique_reduite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quadrique_reduite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native void settypeerr(long jarg1, context jarg1_);
  public final static native void setsizeerr(long jarg1, context jarg1_);
  public final static native void setdimerr(long jarg1, context jarg1_);
  public final static native void divisionby0err(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native void cksignerr(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native void invalidserieserr(String jarg1, long jarg2, context jarg2_);
  public final static native void toofewargs(String jarg1, long jarg2, context jarg2_);
  public final static native void toomanyargs(String jarg1, long jarg2, context jarg2_);
  public final static native void maxordererr(long jarg1, context jarg1_);
  public final static native void setstabilityerr(long jarg1, context jarg1_);
  public final static native long gentypeerr__SWIG_0(long jarg1, context jarg1_);
  public final static native void gentypeerr__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gensizeerr__SWIG_0(long jarg1, context jarg1_);
  public final static native void gensizeerr__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gendimerr__SWIG_0(long jarg1, context jarg1_);
  public final static native void gendimerr__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gendivisionby0err(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gencksignerr(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long geninvalidserieserr(String jarg1, long jarg2, context jarg2_);
  public final static native long gentoofewargs(String jarg1, long jarg2, context jarg2_);
  public final static native long gentoomanyargs(String jarg1, long jarg2, context jarg2_);
  public final static native long genmaxordererr(long jarg1, context jarg1_);
  public final static native long genstabilityerr(long jarg1, context jarg1_);
  public final static native String print_the_type(int jarg1, long jarg2, context jarg2_);
  public final static native String printinner_VECT(long jarg1, int jarg2, long jarg3, context jarg3_);
  public final static native long add_printinner_VECT(long jarg1, long jarg2, int jarg3, long jarg4, context jarg4_);
  public final static native String begin_VECT_string(int jarg1, boolean jarg2, long jarg3, context jarg3_);
  public final static native String end_VECT_string(int jarg1, boolean jarg2, long jarg3, context jarg3_);
  public final static native String print_VECT(long jarg1, int jarg2, long jarg3, context jarg3_);
  public final static native String printint32(int jarg1, int jarg2, long jarg3, context jarg3_);
  public final static native String print_FLOAT_(long jarg1, long jarg2, context jarg2_);
  public final static native long parsed_gen__SWIG_0(long jarg1, context jarg1_);
  public final static native void parsed_gen__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long archive_count(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean archive_save(long jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long archive_restore(long jarg1, long jarg2, context jarg2_);
  public final static native long _ithprime(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ifactors(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _maple_ifactors(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long ifactors__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long ifactors__SWIG_1(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long factors(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _factors(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _divis(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long idivis(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _idivis(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long pfacprem(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long ifactor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ifactor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long euler(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _euler(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long pa2b2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pa2b2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _propfrac(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _iabcuv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long abcuv(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _abcuv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long simp2(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _simp2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fxnd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int is_meromorphic(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native int is_even_odd(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long residue(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _residue(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean intgab(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native long singular(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _singular(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long complex_subst__SWIG_0(long jarg1, gen jarg1_, long jarg2, long jarg3, long jarg4, context jarg4_);
  public final static native long complex_subst__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long lvarxwithinv(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean is_constant_wrt(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean is_linear_wrt(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native boolean is_quadratic_wrt(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native long lnabs(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long surd(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _surd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long invexptoexpneg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean is_rewritable_as_f_of(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native boolean intgab_ratfrac(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long integrate_gen_rem(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long integrate_id_rem(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long linear_integrate(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long integrate_id(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long integrate_gen(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _integrate(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native double rombergo(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, int jarg5, long jarg6, context jarg6_);
  public final static native double rombergt(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, int jarg5, long jarg6, context jarg6_);
  public final static native long _romberg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sum__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long sum_loop(long jarg1, gen jarg1_, long jarg2, gen jarg2_, int jarg3, int jarg4, long jarg5, context jarg5_);
  public final static native long sum__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _sum(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Sum(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _bernoulli(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long seqprod(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _odesolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long preval(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _ibpdv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long fourier_an(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native long fourier_bn(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native long fourier_cn(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native long _fourier_an(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fourier_bn(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fourier_cn(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _isom(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mkisom(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long mkisom(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long prod_expand(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long unlin(long jarg1, long jarg2, context jarg2_);
  public final static native void convolution(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, long jarg4, long jarg5, context jarg5_);
  public final static native void lin(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long _lin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long lnexpand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tunlin(long jarg1, long jarg2, context jarg2_);
  public final static native void tconvolution(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, long jarg4, long jarg5, context jarg5_);
  public final static native void tlin(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long _tlin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _texpand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long expand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long ln_expand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long expexpand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long trigexpand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _about(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _zip(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _accumulate_head_tail(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _divide(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ratnormal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inverse(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Inverse(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _igcdex(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _gcdex(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _revlist(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _restart(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _restart_modes(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _time(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pivot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rowspace(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _colspace(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _copy(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _row(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _col(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _count_sup(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _count_inf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _trunc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _evalc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _open(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fopen(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fprint(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _close(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _blockmatrix(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _delcols(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _delrows(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _JordanBlock(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _companion(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _border(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pade(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lhs(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rhs(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _reverse_rsolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long fft(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _fft(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ifft(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Resultant(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Nullspace(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _assign(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _implicitplot3d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _readwav(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _writewav(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _animate(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _animate3d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _even(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _odd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _writergb(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _readrgb(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long product(long jarg1, long jarg2, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _seqsolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rsolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _array(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _makemod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hexprint(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _octprint(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _binprint(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String cprint(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mathml(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _spread2mathml(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String gen2mathml__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String gen2mathml__SWIG_1(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native String gen2svg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _scalar_product(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _compare(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _preval(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lagrange(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _reorder(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _adjoint_matrix(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _equal2diff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _equal2list(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rank(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _csc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _acsc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ibpu(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _changebase(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _epsilon2zero(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _suppress(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _valuation(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _degree(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lcoeff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tcoeff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sqrfree(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _truncate(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _canonical_form(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fcoeff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _froot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _roots(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _divpc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ptayl(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _dfc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _dfc2f(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _float2rational(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _gramschmidt(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pmin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _potential(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _vpotential(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _poly2symb(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _symb2poly(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _exp2trig(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _nrows(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ncols(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _l2norm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _normalize(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lgcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _float(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hold(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _eigenvals(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Gcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Gcdex(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Factor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Rref(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Rank(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Det(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Quo(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Rem(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Int(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _divisors(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _maxnorm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _l1norm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _dotprod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _diag(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _input__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _textinput(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _primpart(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _content(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _coeff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _chrem(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _genpoly(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _median(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quartile1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quartile3(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quantile(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quartiles(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _moustache(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mean(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _stdDev(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _stddev(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _variance(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _covariance_correlation(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _covariance(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _correlation(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _interval2center(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _linear_regression(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _exponential_regression(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _power_regression(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long regression_plot_attributs(long jarg1, gen jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, context jarg5_);
  public final static native long _linear_regression_plot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _exponential_regression_plot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _logarithmic_regression_plot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _power_regression_plot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polynomial_regression(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polynomial_regression_plot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _logistic_regression(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _logistic_regression_plot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _linear_interpolate(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _parabolic_interpolate(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _center2interval(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _histogram(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cumulated_frequencies(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _classes(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _listplot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _scatterplot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polygonplot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polygonscatterplot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _diagramme_batons(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _camembert(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long cross_prod(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _convexhull(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _simplex_reduce(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _spline(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _bitand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _bitor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _bitxor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hamdist(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotarea(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _add_language(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _remove_language(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _show_language(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _os_version(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gen2continued_fraction(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long float2rational(double jarg1, double jarg2, long jarg3, context jarg3_);
  public final static native long _sec(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _asec(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _acot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _horner(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _moyal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Airy_Ai(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Airy_Bi(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _randNorm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _randexp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _UTPN(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long UTPC(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _UTPC(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long UTPT(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _UTPT(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long UTPF(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _UTPF(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long binomial(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _binomial(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long binomial_cdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _binomial_cdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long binomial_icdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _binomial_icdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long poisson(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _poisson(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long poisson_cdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _poisson_cdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long poisson_icdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _poisson_icdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _normald(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _normal_cdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _normal_icdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long student(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _student(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long student_cdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _student_cdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long student_icdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _student_icdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long chisquare(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _chisquare(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long chisquare_cdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _chisquare_cdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long chisquare_icdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _chisquare_icdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long snedecor(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _snedecor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long snedecor_cdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _snedecor_cdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long snedecor_icdf(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _snedecor_icdf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Beta(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _Beta(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Bessel(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _BesselI(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _BesselJ(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _BesselK(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _BesselY(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _constants_catalog(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pari(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _trn(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sizes(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _permuorder(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _randperm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _is_permu(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _is_cycle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cycle2perm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _p1op2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _c1oc2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _c1op2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _p1oc2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cycles2permu(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _permu2cycles(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _perminv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cycleinv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _signature(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hilbert(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hadamard(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _syst2mat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _vandermonde(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _laplacian(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hessian(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _divergence(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _curl(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _groupermu(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _nextperm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _prevperm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _split(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sum_riemann(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hermite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _laguerre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tchebyshev1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tchebyshev2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _legendre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _permu2mat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long interpolyedre(long jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long interdroitehyperplan(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long interhyperplan(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long interhypersurfacecurve(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long inter2hypersurface(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long interplansphere(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long hypersurface_equation(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long _plot3d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hypersurface(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hyperplan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cone(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _demi_cone(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cylindre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _perpendiculaire_commune(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polyedre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _prisme(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _parallelepipede(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pyramide(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tetraedre_centre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cube(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cube_centre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _octaedre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _icosaedre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _dodecaedre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _aretes(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _faces(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hypersphere(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sphere(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quadrique(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_cospherique(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long get_point(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _point3d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _point2d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long mkrand2d3d(int jarg1, int jarg2, long jarg3, long jarg4, context jarg4_);
  public final static native long droite_by_equation(long jarg1, boolean jarg2, long jarg3, context jarg3_);
  public final static native boolean point2abc(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native long abs_norm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long abs_norm2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long interpolygone(long jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long interdroitecercle(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long curveintercircle(long jarg1, gen jarg1_, long jarg2, gen jarg2_, boolean jarg3, long jarg4, context jarg4_);
  public final static native long _avance(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _recule(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _position(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cap(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tourne_droite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tourne_gauche(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _leve_crayon(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _baisse_crayon(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ecris(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _signe(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _saute(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pas_de_cote(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cache_tortue(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _montre_tortue(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _debut_enregistrement(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fin_enregistrement(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _repete(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _crayon(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _efface(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _vers(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rond(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _disque(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _disque_centre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polygone_rempli(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rectangle_plein(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _triangle_plein(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _dessine_tortue(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _arc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long plotpreprocess(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean chk_double_interval(long jarg1, gen jarg1_, long jarg2, long jarg3, long jarg4, context jarg4_);
  public final static native void ck_parameter(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _erase3d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native void rewrite_with_t_real(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean on(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long plotcontour(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long _aire(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _perimetre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotfunc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _erase(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pixon(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pixoff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _droite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _slope(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _demi_droite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _segment(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long symb_segment(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, int jarg4, long jarg5, context jarg5_);
  public final static native long symb_pnt_name(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long symb_pnt__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long pnt_attrib(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long symb_pnt__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pnt(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _animation(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _point(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _affixe(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _abscisse(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ordonnee(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cote(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _coordonnees(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _coordonnees_polaires(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _coordonnees_rectangulaires(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _point_polaire(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cercle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean centre_rayon(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, boolean jarg4, long jarg5, context jarg5_);
  public final static native long _centre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rayon(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _milieu(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mediatrice(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long bissectrice(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long _bissectrice(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _exbissectrice(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mediane(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _circonscrit(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _orthocentre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inscrit(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _exinscrit(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _isobarycentre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _barycentre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long perpendiculaire(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long _perpendiculaire(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _orthogonal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _parallele(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long distance2pp(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long distance2(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _longueur2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _longueur(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _angle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long scalar_product(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long projection__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long projection__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long parameter2point(long jarg1, long jarg2, context jarg2_);
  public final static native long cercle2curve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long inter(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _click(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _element(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _as_function_of(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lieu(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _head(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tail(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sommets(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sommets_abca(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _symetrie(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rotation(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _projection(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _homothetie(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_coplanaire(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_aligne(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_cocyclique(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_parallele(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_perpendiculaire(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_element(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inversion(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _similitude(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long translation(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _translation(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _curve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotparam(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotpolar(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _parameq(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _equation(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long equation_homogene(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tangent(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ellipse(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hyperbole(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _parabole(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _conique(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _legende(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _distanceat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _distanceatraw(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _areaatraw(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _areaat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _slopeatraw(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _slopeat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _perimeterat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _perimeteratraw(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _extract_measure(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _angleat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _angleatraw(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _couleur(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _parameter(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hauteur(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _triangle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _triangle_rectangle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _triangle_isocele(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _triangle_equilateral(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _parallelogramme(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _isopolygone(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _carre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hexagone(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quadrilatere(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rectangle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _losange(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polygone(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polygone_ouvert(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotfield(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _interactive_plotode(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotode(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long archive_session(boolean jarg1, String jarg2, long jarg3, context jarg3_);
  public final static native long unarchive_session_string(String jarg1, int jarg2, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _unarchive(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _xyztrange(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _switch_axes(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotseq(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotimplicit(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotcontour(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plotinequation(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inter_droite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _dot_paper(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _grid_paper(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _triangle_paper(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _line_paper(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _bitmap(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Pictsize(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plot_style(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DrawInv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Graph(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DrwCtour(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int est_isocele(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _est_isocele(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean est_equilateral(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _est_equilateral(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean est_carre(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _est_carre(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int est_losange(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _est_losange(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int est_parallelogramme(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _est_parallelogramme(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int est_rect(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _est_rectangle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_harmonique(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _div_harmonique(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _point_div(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _birapport(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _conj_harmonique(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _puissance(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _axe_radical(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polaire(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pole(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polaire_reciproque(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_orthogonal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_conjugue(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_faisceau_cercle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _est_faisceau_droite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native int est_faisceau_droite(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _enveloppe(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long put_attributs(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native int est_aligne(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native boolean est_coplanaire(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native boolean est_cocyclique(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native boolean est_parallele(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native boolean est_perpendiculaire(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native int est_element(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native int est_trianglerect(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native boolean est_orthogonal(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native boolean est_harmonique(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _vector(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Ox_2d_unit_vector(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Oy_2d_unit_vector(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _frame_2d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Ox_3d_unit_vector(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Oy_3d_unit_vector(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Oz_3d_unit_vector(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _frame_3d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native void increment_instruction(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String check_local_assign(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long quote_program(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _program(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native void adjust_sst_at(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _bloc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String printasfor(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native String printasifte(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native long _ifte(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _evalb(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _when(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _for(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _local(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _try_catch(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _check_type(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _type(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _nop(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _feuille(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _maple_op(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sommet(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long subsop__SWIG_0(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long subsop__SWIG_1(long jarg1, long jarg2, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _maple_subsop(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _subsop(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _append(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _prepend(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long concat(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long _concat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _contains(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _select(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _remove(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _option(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _case(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long rand_interval(long jarg1, boolean jarg2, long jarg3, context jarg3_);
  public final static native long _srand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _char(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _asc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _map(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _apply(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _makelist(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _interval(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _comment(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _throw(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _union(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _intersect(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inter(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _minus(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _dollar(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _makemat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _compose(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _composepow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _has(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _args(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lname(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _halt(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _kill(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cont(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sst(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sst_in(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _debug(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _watch(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rmwatch(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _breakpoint(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rmbreakpoint(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native void debug_loop(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _backquote(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _double_deux_points(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _maple2mupad(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _maple2xcas(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mupad2maple(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mupad2xcas(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pwd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _scientific_format(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _integer_format(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long giac_eval_level(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _prog_eval_level(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _with_sqrt(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _xcas_mode(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _all_trig_solutions(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ntl_on(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _complex_mode(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _angle_radian(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _epsilon(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _proba_epsilon(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _complex_variables(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _approx_mode(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _threads(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _threads_allowed(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mpzclass_allowed(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cas_setup(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Digits(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _insmod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _xport(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rmmod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lsmod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _virgule(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sort(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ans(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quest(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _convert(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _deuxpoints(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long quote_read(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _read(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _write(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _save_history(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _findhelp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _member(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tablefunc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tableseq(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long protecteval(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _unapply(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _makevector(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _matrix(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _makesuite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _break(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _continue(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _label(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _goto(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tilocal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long inputform_post_analysis(long jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long inputform_pre_analysis(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inputform(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _choosebox(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _output(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _input__SWIG_1(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native String printastifunction(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native long _Dialog(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Title(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Text(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Request(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DropDown(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Popup(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _expr(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _string(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _part(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Pause(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Row(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Col(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pointprod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pointdivision(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pointpow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pourcent(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hash(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _interactive(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String printassuffix(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native long _ti_semi(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long widget_size(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long keyboard(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long current_sheet(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long window_switch(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long maple_lib(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long maple_root(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long symb_unit(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native String printasDigits(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native long user_operator(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SetFold(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long simplifier(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _simplifier(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long mksa_reduce(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long find_or_make_symbol(String jarg1, boolean jarg2, long jarg3, context jarg3_);
  public final static native long mksa_convert(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ufactor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _usimplify(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _piecewise(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long when2piecewise(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long when2sign(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long piecewise2when(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _geo2d(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String printasinnerbloc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long symb_local__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long symb_local__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long symb_check_type(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quaternion(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long risch(long jarg1, gen jarg1_, long jarg2, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _risch(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String printasconstant(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native long _rpn(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _alg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _PERCENT(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ROLL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ROLLD(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SWAP(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DUP(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _OVER(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _PICK(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DROP(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _NOP(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _IFTE(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RPN_LOCAL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RPN_FOR(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RPN_WHILE(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RPN_UNTIL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RPN_CASE(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RCL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _VARS(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _purge(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rpn_prog(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long rpn_eval(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long _division(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _binary_minus(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hp38(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ABS(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _MODULO(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RANDOM(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _MAXREAL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _MINREAL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _EXPM1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _LNP1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ADDROW(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ADDCOL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SCALE(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SCALEADD(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SWAPCOL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SUB(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RANDMAT(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _REDIM(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _REPLACE(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _EIGENVAL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _EIGENVV(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SIZE(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _INT(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _HPDIFF(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _HPINT(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _HPSUM(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _TAYLOR(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _POLYFORM(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _IS_LINEAR(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SVD(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SVL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SPECRAD(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SPECNORM(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _COND(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SCHUR(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _LQ(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _LU(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _QR(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _XPON(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _MANT(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _HMSX(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _XHMS(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DEGXRAD(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RADXDEG(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _PERCENTCHANGE(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _PERCENTTOTAL(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ITERATE(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _MAKEMAT(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _LSQ(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _isprime(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _numer(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _denom(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _NTHROOT(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Ans(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _VIEWS(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native void qualify(long jarg1, gen jarg1_, long jarg2, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native int seqapp_prepare__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, long jarg4, context jarg4_, int jarg5);
  public final static native int seqapp_prepare__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, long jarg4, context jarg4_);
  public final static native void lcmdeno(long jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long series(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _series(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _revert(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _bounded_function(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long bounded_function(long jarg1, context jarg1_);
  public final static native long limit(long jarg1, gen jarg1_, long jarg2, long jarg3, gen jarg3_, int jarg4, long jarg5, context jarg5_);
  public final static native long _limit(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _euler_mac_laurin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean convert_to_euler_mac_laurin(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long find_singularities(long jarg1, gen jarg1_, long jarg2, int jarg3, long jarg4, context jarg4_);
  public final static native long solve__SWIG_0(long jarg1, gen jarg1_, long jarg2, int jarg3, long jarg4, context jarg4_);
  public final static native long solve__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, int jarg3, long jarg4, context jarg4_);
  public final static native void solve__SWIG_2(long jarg1, gen jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, context jarg5_);
  public final static native void in_solve(long jarg1, gen jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, context jarg5_);
  public final static native boolean modpolyroot(long jarg1, long jarg2, gen jarg2_, long jarg3, boolean jarg4, long jarg5, context jarg5_);
  public final static native long solvepostprocess(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _solve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long in_fsolve(long jarg1, long jarg2, context jarg2_);
  public final static native long _fsolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _linsolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _newton(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _greduce(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _gbasis(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _in_ideal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long solvepreprocess(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long checkanglemode(long jarg1, context jarg1_);
  public final static native long degtorad(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long radtodeg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long subst__SWIG_0(long jarg1, long jarg2, gen jarg2_, long jarg3, gen jarg3_, boolean jarg4, long jarg5, context jarg5_);
  public final static native long subst__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, boolean jarg4, long jarg5, context jarg5_);
  public final static native long subst__SWIG_2(long jarg1, gen jarg1_, long jarg2, long jarg3, boolean jarg4, long jarg5, context jarg5_);
  public final static native long quotesubst(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long halftan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _halftan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long shift_phase(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _shift_phase(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long hyp2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hyp2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sincos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sincos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long trig2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _trig2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long halftan_hyp2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _halftan_hyp2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long rewrite_hyper(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long asin2acos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _asin2acos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long asin2atan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _asin2atan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long acos2asin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _acos2asin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long acos2atan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _acos2atan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long atan2acos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _atan2acos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long atan2asin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _atan2asin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long as_linear_combination(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long tsimplify_noexpln(long jarg1, gen jarg1_, int jarg2, int jarg3, long jarg4, context jarg4_);
  public final static native long tsimplify_common(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tsimplify(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tsimplify(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long simplify__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long trigcos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _trigcos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long trigsin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _trigsin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long trigtan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _trigtan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tan2sincos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tan2sincos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tan2sincos2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tan2sincos2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tan2cossin2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tan2cossin2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tcollect(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tcollect(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long lncollect(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lncollect(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _powexpand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long powexpand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long exp2pow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _exp2pow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pow2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long pow2expln__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long simplifyfactorial(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long pow2expln__SWIG_1(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long gamma2factorial(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long gammatofactorial(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long factorial2gamma(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long factorialtogamma(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long factor_xn__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long factor_xn__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _factor_xn(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Heavisidetosign(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Heavisidetosign(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long expln2trig(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mult_conjugate(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mult_c_conjugate(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sin2tan2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long cos2tan2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tan2tan2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sinh2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long cosh2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tanh2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long inv_test_exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sin2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long cos2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tan2exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long exp2sincos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tantosincos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tantosincos2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tantocossin2(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long asintoacos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long acostoasin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long asintoatan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long atantoasin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long acostoatan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long atantoacos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long trigcospow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long trigsinpow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long trigtanpow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long powtopowexpand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long exptopower(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long asin2ln(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long acos2ln(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long atan2ln(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean guess_program(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long normal__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long normal__SWIG_1(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long normalize_sqrt(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long recursive_normal__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _recursive_normal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long recursive_normal__SWIG_1(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long factor__SWIG_0(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long ratfactor(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long factor__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, boolean jarg3, long jarg4, context jarg4_);
  public final static native long _collect(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long factorcollect(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long partfrac__SWIG_0(long jarg1, gen jarg1_, long jarg2, boolean jarg3, long jarg4, context jarg4_);
  public final static native long partfrac__SWIG_1(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long partfrac__SWIG_2(long jarg1, gen jarg1_, long jarg2, boolean jarg3, long jarg4, context jarg4_);
  public final static native long partfrac__SWIG_3(long jarg1, gen jarg1_, long jarg2, gen jarg2_, boolean jarg3, long jarg4, context jarg4_);
  public final static native long _partfrac(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _resultant(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long cklvar(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long ckalgvar(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean sym2r__SWIG_0(long jarg1, gen jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7, gen jarg7_, long jarg8, gen jarg8_, long jarg9, context jarg9_);
  public final static native boolean sym2r__SWIG_1(long jarg1, gen jarg1_, long jarg2, int jarg3, long jarg4, gen jarg4_, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native long e2r__SWIG_0(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long e2r__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _e2r(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long r2sym__SWIG_0(long jarg1, long jarg2, long jarg3, context jarg3_);
  public final static native long r2sym__SWIG_1(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long r2e__SWIG_0(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long r2e__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _r2e(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long r2sym__SWIG_2(long jarg1, long jarg2, long jarg3, context jarg3_);
  public final static native long r2sym__SWIG_3(long jarg1, long jarg2, long jarg3, context jarg3_);
  public final static native long add_print(long jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native void evalfdouble2reim(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, gen jarg3_, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native String gen2tex(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long graph2tex(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long _graph2tex(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _graph3d2tex(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _latex(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _seq(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _logb(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _getType(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Define(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Input(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _InputStr(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Prompt(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cSolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cFactor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cpartfrac(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _nSolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _zeros(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cZeros(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _getDenom(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _getNum(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _tExpand(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _comDenom(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _randPoly(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _nInt(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _nDeriv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _avgRC(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fMin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fMax(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _taylor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _arcLen(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _dim(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _format(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inString(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _left(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _right(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mid(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ord(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rotate(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _shift(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _augment(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _semi_augment(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cumSum(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _exp2list(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _list2mat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _deltalist(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mat2list(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _newList(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _polyEval(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _product(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SortA(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SortD(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _int(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _iPart(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Fill(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mRow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _mRowAdd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rowAdd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rowSwap(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _newMat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ref(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _subMat(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _unitV(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rowNorm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _colNorm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Archive(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Unarchiv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ClrIO(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Output(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _getKey(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DelFold(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DispG(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DispHome(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Exec(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _NewFold(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _GetFold(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _StoPic(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RclPic(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RplcPic(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ClrGraph(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _PtOn(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _PtOff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Line(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _LineHorz(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _LineVert(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _DrawSlp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Circle(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _PtText(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _NewPic(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ZoomSto(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ZoomRcl(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _deSolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _LineTan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _CyclePic(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _RandSeed(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long exact(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long fPart(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long simult(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _unarchive_ti(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sialorssinon(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pour(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String printsommetasoperator(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native String texprintsommetasoperator(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native long taylor(long jarg1, gen jarg1_, int jarg2, long jarg3, int jarg4, long jarg5, gen jarg5_, long jarg6, context jarg6_);
  public final static native long apply(long jarg1, gen jarg1_, long jarg2, long jarg3, context jarg3_);
  public final static native long frac_neg_out(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _constant_one(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _constant_zero(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rm_a_z(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _id(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _not(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _neg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long ln(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long log(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long log10(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long alog10(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long atan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long exp(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String gen2string(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native String print_with_parenthesis_if_required(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long sqrt_noabs(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sqrt(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sqrt_mod(long jarg1, gen jarg1_, long jarg2, gen jarg2_, boolean jarg3, long jarg4, context jarg4_);
  public final static native long sin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long cos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long asin(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long acos(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sinh(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long cosh(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long tanh(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long asinh(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long acosh(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long atanh(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long quote(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long unquote(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sign(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long order_size(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _and(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ou(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _xor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long xor2(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _min(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _max(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _gcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _lcm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _egcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _iegcd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _iquo(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _irem(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quote_pow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _iquorem(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _smod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rdiv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _is_prime(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _is_pseudoprime(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long nextprime1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long prevprime1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _jacobi_symbol(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _legendre_symbol(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _floor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ceil(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long ceil2floor(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _round(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _print(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ichinrem(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long double_is_int(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _fracmod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _factorial(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _perm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long comb__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _comb(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _chinrem(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _abs(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cyclotomic(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _calc_mode(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quorem(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _quo(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rem(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long sto__SWIG_0(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long sto__SWIG_1(long jarg1, gen jarg1_, long jarg2, gen jarg2_, boolean jarg3, long jarg4, context jarg4_);
  public final static native boolean is_assumed_integer(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long giac_assume(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long giac_additionally(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long doubleassume_and(long jarg1, long jarg2, gen jarg2_, int jarg3, boolean jarg4, long jarg5, context jarg5_);
  public final static native long _equal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _same(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inferieur_strict(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _inferieur_egal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _superieur_strict(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _superieur_egal(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _different(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long check_symb_of(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _of(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _at(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _table(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _plus(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _prod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String cprintaspow(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native long _pow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _powmod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _eval(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _evalf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _subst(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _subs(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _maple_subs(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ampersand_times(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _version(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Gamma(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Gamma(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long lngamma(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Psi__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Psi__SWIG_1(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _Psi(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Zeta__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Zeta(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _erf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long erf(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _erfc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long erfc(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Ci(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Si(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Ei(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Heaviside(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Dirac(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _multistring(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _normalmod(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long alternate_series(long jarg1, gen jarg1_, long jarg2, gen jarg2_, int jarg3, long jarg4, context jarg4_);
  public final static native long Eta__SWIG_0(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long Eta__SWIG_1(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Zeta__SWIG_1(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _Eta(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _erfs(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SiCi_f(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _SiCi_g(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Ci0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _Ei_f(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Ei__SWIG_0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Ei__SWIG_1(long jarg1, gen jarg1_, int jarg2, long jarg3, context jarg3_);
  public final static native long _Ei0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Ci_replace0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long Ei_replace0(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native String printassubs(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native String printasmaple_subs(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native String printassto(long jarg1, gen jarg1_, String jarg2, long jarg3, context jarg3_);
  public final static native long _proot(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pcoeff(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _peval(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long spread_convert(long jarg1, gen jarg1_, int jarg2, int jarg3, long jarg4, context jarg4_);
  public final static native boolean iscell(long jarg1, gen jarg1_, long jarg2, long jarg3, long jarg4, context jarg4_);
  public final static native long matrice_insert(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, gen jarg6_, long jarg7, context jarg7_);
  public final static native long cross(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _tran(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long ckmtrace(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean mrref(long jarg1, long jarg2, long jarg3, long jarg4, gen jarg4_, long jarg5, context jarg5_);
  public final static native long _rref(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _idn(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long vranm(int jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long mranm(int jarg1, int jarg2, long jarg3, gen jarg3_, long jarg4, context jarg4_);
  public final static native long _ranm(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _randvector(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _padic_linsolve(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long mdet(long jarg1, long jarg2, context jarg2_);
  public final static native long _det(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _sylvester(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _hessenberg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pcar_hessenberg(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _pcar(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native boolean egv(long jarg1, long jarg2, long jarg3, long jarg4, context jarg4_, boolean jarg5, boolean jarg6, boolean jarg7);
  public final static native long _egv(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _svd(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _egvl(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _jordan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long jordan(long jarg1, gen jarg1_, boolean jarg2, long jarg3, context jarg3_);
  public final static native long _rat_jordan(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _rat_jordan_block(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long diagonal_apply(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, long jarg4, context jarg4_);
  public final static native long analytic_apply(long jarg1, gen jarg1_, long jarg2, gen jarg2_, long jarg3, long jarg4, context jarg4_);
  public final static native long matpow(long jarg1, long jarg2, gen jarg2_, long jarg3, context jarg3_);
  public final static native long _matpow(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ker(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _image(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cross(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long lu(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long qr(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cholesky(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _basis(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ibasis(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _cell(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long l2norm(long jarg1, long jarg2, context jarg2_);
  public final static native long _lll(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ihermite(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _ismith(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long _csv2gen(long jarg1, gen jarg1_, long jarg2, context jarg2_);
  public final static native long csv2gen(long jarg1, char jarg2, char jarg3, char jarg4, char jarg5, long jarg6, context jarg6_);
}
